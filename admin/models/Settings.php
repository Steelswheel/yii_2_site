<?php

namespace app\admin\models;

use \app\admin\components\FilesBehavior;


/**
 * This is the model class for table "settings".
 *
 * @property int $id
 * @property string|null $settings
 * @property string|null $label
 * @property string|null $field_type
 * @property $fields
 * @property string|null $created_at
 * @property string|null $updated_at
 * @property string|null $deleted_at
 */
class Settings extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'settings';
    }

    public function beforeSave($insert)
    {

        $tmp = $this->fields;
        if (is_array($tmp)){
            foreach ($tmp as $key => $item){
                if ( in_array($item['type'],['file','files'])){

                    $isMulti = $item['type'] === 'files';
                    if (isset($item['value'])){

                        FilesBehavior::loadFile('settings', $this->id, $item['id'], $isMulti,'/file/settings', $item['value']);
                        $tmp[$key]['value'] = [];

                    }
                }
            }

            $this->fields = $tmp;
        }


        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['value'], 'string'],
            [['fields','created_at', 'updated_at', 'deleted_at'], 'safe'],
            [['settings', 'label', 'field_type'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'settings' => 'Имя атрибута',
            'label' => 'Имя',
            'fields' => 'Атрибуты',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'deleted_at' => 'Deleted At',
        ];
    }


    public function getfieldsFormat(){

        $tmp = $this->fields;
        if (is_array($tmp)){
            foreach ($tmp as $key => $item){
                if ( in_array($item['type'],['file','files'])){

                    $tmp[$key]['value'] = FilesBehavior::getLoadFile('settings',$this->id,$item['id']);

                }
            }

            $this->fields = $tmp;

        }
        return $this->fields;

    }



    public function fields()
    {
        return [
            'id',
            'settings',
            'label',
            'fields' => function(){
                return $this->fieldsFormat;
            },
            'created_at',
            'updated_at',
            'deleted_at',
        ];
    }


}
// 1207878684:AAGFwszqjr8tXtpWsoDJY0MroLyWpSrSxz8
// curl -F "url=https://ngbrt174.ru/message/telegramptn610l663uj7g4z58i6nxszufxhn31gsxel7xwo" https://api.telegram.org/bot1207878684:AAGFwszqjr8tXtpWsoDJY0MroLyWpSrSxz8/setWebhook